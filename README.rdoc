== README

Currently at Videos/show. Having trouble with rendering the form if there's an error. Afterwards

== What has been done 

- Set up users
- Users can sign up
- Users can sign in and sign out
- Users can update their login info 
- Certain users can be admins
- Only Admin can see all users
- Only Admin can destroy all users
- Set up common apps
- Users able to update common apps
- Users can only update their own common apps
- Make a "Common App Model", with all fields. 
- Connect User info to the common app
- If the common app is not filled, ask them to complete it. 
- On signup, redirect us to the "Common App"
- Make a "Video Model"
- If the video is not filled, ask them to complete it. 
- Make a show video page
- Make an Edit Video Page
- Make an edit video page
- On finishing common app, ask user to fill in video 
- Make a Job Model, Bullet Model, and Roles Model 
- Create validations for jobs
- Connect bullets to jobs
- Connect Roles to jobs
- Add resources for jobs
- Create ability for an admin to create a job
- Make nested form in Rails
- Make Edit view on jobs
- Make New View on jobs
- Make show view on jobs
- Make index view on jobs 
- Make a Password Reset
- Make a Password Reset Email 
- Make Industries
- Make Cities
- Make Roles
- Connect Industries, cities, roles with common apps
- Connect industries, cities, roles with jobs
- Added ability to multiselect on common app
- Added ability to multiselect on jobs
- Added ability for admin to see and edit other people's common_apps and videos 
- Added ability to make custom questions for jobs 

- Users can reset forgotten passwords
- People can multiselect their roles, cities, and industries
- Jobs can also have multiple roles, cities, and industries
- Admin can see and edit other people's common appls, videos 
- When creating a new job, you can create custom questions for the job








== To do

--

Make Applications

Make Questions

Make Answers

Make each user viewable

Make an algorithm for match 

---



================

Design area. 

List out all resources

Design each one in the proccess 

--

On Show view for jobs, make a non-user able to see only a bit

Figure out the type of categories etc that have has_many relationships.
First, set up the nested form for making a new common app
Second, set up the nested form for jobs 

Make a status bar type thing for the common app 

-for the register, see common app, and the video view, add a 1, 2, 3 steps thing

Before going live, change the nimbb code to live version 

Convert whatever I have so far into slim
Make whatever I have so far designed in a nice manner, as soon as the flow is done enough


At the end, change action mailer default url to final domain, in environment/production

Why did you withdrawal



=== The Database Schema 


job 
has many users through application
xhas many questions 

users
has_many jobs through application 


Application
    user_id
    job_id

    belongs_to :user
    belongs_to :job
    has_many :answers

Question
    Xjob_id
    Xcontent


    Xbelongs_to :job
    Xhas_one :answer

Answer
    application_id
    question_id 

    belongs_to :application
    Xbelongs_to :question



-------

Test Procedure

User able to sign up
On sign up, user redirected to make profile
On make profile, User able to see video
User able to update sign up info
User able to update profile info
On update of profile info, redirected to root
User able to update video, on update video, redirect to root
If used does not do video, it is prompted on the home page


